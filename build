#!/bin/bash
if [[ "$*1" == *"-h"*  ]]
then
  echo "Build 2.0 v1.0.2020"
  echo "by German Espinosa (germanespinosa@gmail.com)"
  echo ""
  echo "Build utility for c++ projects and python libraries."
  echo "For c++ it creates output folder (cmake-build-release or cmake-build-debug), runs cmake configuration and launch make build."
  echo "For python libraries, it versions the library, compress the files into a zip that can be installed with the installation utility"
  echo ""
  echo "Usage:"
  echo "   build [-c] [-cd] [-d] [-t] [-v version]"
  echo ""
  echo "Parameters:"
  echo "  -c  : Clears previous build. Regenerates build folder (C++ only)"
  echo "  -cd : Clears previous build and dependencies (C++ only)"
  echo "  -d  : Builds in debug  (C++ only)"
  echo "  -t  : Run tests (C++ only)"
  echo "  -i  : Runs make install after build"
  echo "  -v  : Library version in format \"major.minor.build\" (int.int.int) (python only)"
  echo ""
  exit 0
fi
#check if it is a C++ build or a python build
if [ -f "CMakeLists.txt" ]
then
  # C++ build
  FOLDER="cmake-build-release"
  BUILDTYPE="Release"

  if [[ "$*1" == *"-d"*  ]]
  then
    FOLDER="cmake-build-debug"
    BUILDTYPE="Debug"
  fi

  TESTS="NO_TESTS"
  if [[ "$*1" == *"-t"*  ]]
  then
    TESTS=""
  fi

  if [ -d "$FOLDER" ]
  then
    if [[ "$*1" == *"-c"*  ]]
    then
      rm $FOLDER -r
    fi
  fi
  if [ -d "dependencies" ]
  then
    if [[ "$*1" == *"-cd"*  ]]
    then
      rm dependencies -r -f
    fi
  fi
  mkdir $FOLDER -p

  cd $FOLDER
  export CATCH_TESTS="$TESTS"
  cmake .. -DCMAKE_BUILD_TYPE=$BUILDTYPE '-DCMAKE_CXX_COMPILER=/bin/g++-10'

  if [[ "$*1" == *"-i"*  ]]
  then
    make install
  else
    make -j
  fi
else
  # python build
  version=""
  for (( i=1; i<=$#; i++)); do
    j=$((i+1))
    if [[ "${!i}" == "-v" ]]
    then
      version="${!j}"
    fi
  done
  for dir in */     # list directories in the form "/tmp/dirname/"
  do
    dir=${dir%*/}      #_ remove the trailing "/"
    if [ -f "$dir/__init__.py" ]
    then
      build.py "$dir" "$version"
    fi
  done
fi

if [ "$build" == "NO_BLUID" ]
then
  echo "No cmake project file (CMakeLists.txt) and no python library found"
fi
